<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.User">
    <id column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_NICKNAME" jdbcType="VARCHAR" property="userNickname" />
    <result column="USER_SEX" jdbcType="VARCHAR" property="userSex" />
    <result column="USER_PHONE" jdbcType="VARCHAR" property="userPhone" />
    <result column="USER_SCORE" jdbcType="INTEGER" property="userScore" />
    <result column="USER_MONEY" jdbcType="DOUBLE" property="userMoney" />
    <result column="USER_ORDER_COUNT" jdbcType="INTEGER" property="userOrderCount" />
  </resultMap>
  <sql id="Base_Column_List">
    USER_ID, USER_NAME, USER_NICKNAME, USER_SEX, USER_PHONE, USER_SCORE, USER_MONEY, 
    USER_ORDER_COUNT
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where USER_ID = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where USER_ID = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.User">
    insert into user (USER_ID, USER_NAME, USER_NICKNAME, 
      USER_SEX, USER_PHONE, USER_SCORE, 
      USER_MONEY, USER_ORDER_COUNT)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userNickname,jdbcType=VARCHAR}, 
      #{userSex,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{userScore,jdbcType=INTEGER}, 
      #{userMoney,jdbcType=DOUBLE}, #{userOrderCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="userNickname != null">
        USER_NICKNAME,
      </if>
      <if test="userSex != null">
        USER_SEX,
      </if>
      <if test="userPhone != null">
        USER_PHONE,
      </if>
      <if test="userScore != null">
        USER_SCORE,
      </if>
      <if test="userMoney != null">
        USER_MONEY,
      </if>
      <if test="userOrderCount != null">
        USER_ORDER_COUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userScore != null">
        #{userScore,jdbcType=INTEGER},
      </if>
      <if test="userMoney != null">
        #{userMoney,jdbcType=DOUBLE},
      </if>
      <if test="userOrderCount != null">
        #{userOrderCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.User">
    update user
    <set>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        USER_NICKNAME = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        USER_SEX = #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        USER_PHONE = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userScore != null">
        USER_SCORE = #{userScore,jdbcType=INTEGER},
      </if>
      <if test="userMoney != null">
        USER_MONEY = #{userMoney,jdbcType=DOUBLE},
      </if>
      <if test="userOrderCount != null">
        USER_ORDER_COUNT = #{userOrderCount,jdbcType=INTEGER},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.User">
    update user
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_NICKNAME = #{userNickname,jdbcType=VARCHAR},
      USER_SEX = #{userSex,jdbcType=VARCHAR},
      USER_PHONE = #{userPhone,jdbcType=VARCHAR},
      USER_SCORE = #{userScore,jdbcType=INTEGER},
      USER_MONEY = #{userMoney,jdbcType=DOUBLE},
      USER_ORDER_COUNT = #{userOrderCount,jdbcType=INTEGER}
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.model.User">
    <id column="USER_ID" jdbcType="DECIMAL" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_NICKNAME" jdbcType="VARCHAR" property="userNickname" />
    <result column="USER_SEX" jdbcType="VARCHAR" property="userSex" />
    <result column="USER_PHONE" jdbcType="VARCHAR" property="userPhone" />
    <result column="USER_SCORE" jdbcType="DECIMAL" property="userScore" />
    <result column="USER_WALLET" jdbcType="DECIMAL" property="userWallet" />
    <result column="USER_ORDER_COUNT" jdbcType="DECIMAL" property="userOrderCount" />
  </resultMap>
  <sql id="Base_Column_List">
    USER_ID, USER_NAME, USER_NICKNAME, USER_SEX, USER_PHONE, USER_SCORE, USER_WALLET, 
    USER_ORDER_COUNT
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.math.BigDecimal" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where USER_ID = #{userId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    delete from user
    where USER_ID = #{userId,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.User">
    insert into user (USER_ID, USER_NAME, USER_NICKNAME, 
      USER_SEX, USER_PHONE, USER_SCORE, 
      USER_WALLET, USER_ORDER_COUNT)
    values (#{userId,jdbcType=DECIMAL}, #{userName,jdbcType=VARCHAR}, #{userNickname,jdbcType=VARCHAR}, 
      #{userSex,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{userScore,jdbcType=DECIMAL}, 
      #{userWallet,jdbcType=DECIMAL}, #{userOrderCount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="userNickname != null">
        USER_NICKNAME,
      </if>
      <if test="userSex != null">
        USER_SEX,
      </if>
      <if test="userPhone != null">
        USER_PHONE,
      </if>
      <if test="userScore != null">
        USER_SCORE,
      </if>
      <if test="userWallet != null">
        USER_WALLET,
      </if>
      <if test="userOrderCount != null">
        USER_ORDER_COUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=DECIMAL},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userScore != null">
        #{userScore,jdbcType=DECIMAL},
      </if>
      <if test="userWallet != null">
        #{userWallet,jdbcType=DECIMAL},
      </if>
      <if test="userOrderCount != null">
        #{userOrderCount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.User">
    update user
    <set>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        USER_NICKNAME = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        USER_SEX = #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        USER_PHONE = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userScore != null">
        USER_SCORE = #{userScore,jdbcType=DECIMAL},
      </if>
      <if test="userWallet != null">
        USER_WALLET = #{userWallet,jdbcType=DECIMAL},
      </if>
      <if test="userOrderCount != null">
        USER_ORDER_COUNT = #{userOrderCount,jdbcType=DECIMAL},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.User">
    update user
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_NICKNAME = #{userNickname,jdbcType=VARCHAR},
      USER_SEX = #{userSex,jdbcType=VARCHAR},
      USER_PHONE = #{userPhone,jdbcType=VARCHAR},
      USER_SCORE = #{userScore,jdbcType=DECIMAL},
      USER_WALLET = #{userWallet,jdbcType=DECIMAL},
      USER_ORDER_COUNT = #{userOrderCount,jdbcType=DECIMAL}
    where USER_ID = #{userId,jdbcType=DECIMAL}
  </update>
</mapper>